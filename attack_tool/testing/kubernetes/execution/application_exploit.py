from testing.testing import Testing
import time

class ApplicationExploit(Testing):
    def __init__(self):
        super().__init__()
        self.name = "Application exploit (RCE)"
        self.mitre_tactic = "TA0002"
        self.mitre_technique = "T1190"
        self.microsoft_technique = "MS-TA9009"
        self.pod = {
                    "apiVersion": "v1",
                    "kind": "Pod",
                    "metadata": {
                        "name": "vulnerable-pod"
                    },
                    "spec": {
                        "containers": [
                            {
                                "image": "disenchant/vulnerable-app-demo",
                                "name": "vulnerable-app",
                                "ports": [
                                    {
                                        "containerPort": 80
                                    }
                                ]
                            }
                        ]
                    }
                }
        
    def run_attack(self):
        if self.check_install_kubectl():   
            
                # Creating Pod vulnerable-pod
                print("# Creating Pod vulnerable-pod...")
                self.kubectl_create_file("vulnerable-pod.yaml", self.pod)
                self.kubectl_apply("vulnerable-pod.yaml")
            
                while not self.kubectl_is_pod_ready("vulnerable-pod"):
                    time.sleep(1)
                           
                # Cleanup
                self.cleanup()

    def cleanup(self):
        # Delete Pod vulnerable-pod
        print("\n# Deleting Pod vulnerable-pod...")
        self.kubectl_delete("vulnerable-pod")
        
        print("\n# Deleting vulnerable-pod.yaml...")
        self.delete_file("vulnerable-pod.yaml")


    def display_help(self):
        pass

    def check_prerequisites(self):
        pass

    def determine_executable_path(self):
        pass